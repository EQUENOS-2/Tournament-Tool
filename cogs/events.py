import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio
import os, random

#----------------------------------------------+
#                 Functions                    |
#----------------------------------------------+
from functions import antiformat as anf, detect, TreatStorage, TreatUser, is_command
from custom_converters import IntConverter
from functions import EmergencyExit
what = str(os.environ.get("what"))
what2 = str(os.environ.get("what2"))
tale = str(os.environ.get("tale"))

def check(m):
    if m.guild is not None:
        return m.guild.id == 422784396425297930 and m.content in [what, what2]
    else:
        return False



class events(commands.Cog):
    def __init__(self, client):
        self.client = client

    #----------------------------------------------+
    #                   Events                     |
    #----------------------------------------------+
    @commands.Cog.listener()
    async def on_ready(self):
        print(f">> events cog is loaded")

    #----------------------------------------------+
    #                  Commands                    |
    #----------------------------------------------+
    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        help="–Ω–∞–π—Ç–∏ —á–∏—Å–ª–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–Ω–∞–ª–∞",
        description="–Ω–∞—Ö–æ–¥–∏—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —á–∏—Å–ª–∞ –≤ –∫–∞–Ω–∞–ª–µ",
        brief="–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ —á–∏—Å–ª–∞",
        usage="123 71" )
    async def find_numbers(self, ctx, channel_search, *, string):
        channel = detect.channel(ctx.guild, channel_search)
        nums = {int(w): [] for w in string.split() if w.isdigit()}

        if channel is None:
            reply = discord.Embed(
                title="üí• –û—à–∏–±–∫–∞",
                description=f"–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –∫–∞–Ω–∞–ª ({channel_search})",
                color=discord.Color.dark_red()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)

        elif len(nums) == 0:
            reply = discord.Embed(
                title="üí• –û—à–∏–±–∫–∞",
                description="–í —Å—Ç—Ä–æ–∫–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞",
                color=discord.Color.dark_red()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)
        
        else:
            p_bar = await ctx.send(
                f"üïë –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ —Å –∫–∞–Ω–∞–ª–∞ <#{channel.id}>...\n"
                "–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: < 1000"
            )
            counter = 0

            async for message in channel.history(limit=100000):
                try:
                    counter += 1
                    text = message.content
                    if text != "":
                        num = text.split(maxsplit=1)[0]
                        if num.isdigit():
                            num = int(num)
                            if num in nums and str(message.author) not in nums[num]:
                                nums[num].append(str(message.author))
                    if counter % 1000 == 0:
                        await p_bar.edit(
                            content=("üïë –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ —Å –∫–∞–Ω–∞–ª–∞...\n"
                            f"–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: > {counter}")
                        )
                except Exception:
                    pass
            if counter >= 100000:
                await ctx.send("–ò—Å—á–µ—Ä–ø–∞–Ω –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π")
            
            reply = discord.Embed(
                titile="üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏",
                color=discord.Color.gold()
            )
            for num in nums:
                desc = ""
                winners = nums[num]
                if winners != []:
                    last = winners[len(winners) - 1]
                    title = f"üéÅ **{num} —É–≥–∞–¥–∞–Ω–æ –∏–≥—Ä–æ–∫–æ–º {anf(last)}**"
                    winners = winners[:-1]
                    
                    if len(winners) > 0:
                        desc += f"> –û—Å—Ç–∞–ª—å–Ω—ã–µ: "
                        for winner in winners:
                            desc += f"{anf(winner)}, "
                        desc = f"{desc[:-2]}"
                    else:
                        desc += "> –õ–æ–ª –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ –Ω–µ —É–≥–∞–¥–∞–ª"
                    reply.add_field(name=title, value=desc[:256], inline=False)
            
            await ctx.send(embed=reply)


    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        help="–Ω–∞—á–∏—Å–ª–∏—Ç—å/–æ—Ç–æ–±—Ä–∞—Ç—å –∫–æ–Ω—Ñ–µ—Ç—ã",
        description="–Ω–∞—á–∏—Å–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ–Ω—Ñ–µ—Ç—ã, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∏ –æ—Ç–±–∏—Ä–∞–µ—Ç, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ.",
        brief="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        usage="5 User#1234" )
    async def treat(self, ctx, amount: IntConverter, *, member: discord.Member=None):
        if member is None:
            member = ctx.author
        # Db manip
        TreatStorage(ctx.guild.id, request_data=False).add_treats(member.id, amount)
        # response
        if amount < 0:
            act = "–û—Ç–æ–±—Ä–∞–Ω—ã"
            amount = -amount
        else:
            act = "–î–æ–±–∞–≤–ª–µ–Ω—ã"
        reply = discord.Embed(color=discord.Color.magenta())
        reply.title = f"üç¨ | {anf(member)}"
        reply.description = f"{act} –∫–æ–Ω—Ñ–µ—Ç—ã: **{amount}**"
        reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)


    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.command(
        aliases=["sweets"],
        help="—Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –∫–æ–Ω—Ñ–µ—Ç",
        description="–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –∫–æ–Ω—Ñ–µ—Ç. –ú–æ–∂–Ω–æ —Ç–∞–∫ –∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—É–∂–∏–µ, —É–ø–æ–º—è–Ω—É–≤ —É—á–∞—Å—Ç–Ω–∏–∫–∞.",
        brief="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)",
        usage="\nUser#1234" )
    async def treats(self, ctx, *, member: discord.Member=None):
        if member is None: member = ctx.author
        inv = TreatStorage(ctx.guild.id, {f"users.{member.id}": True}, {f"users.{member.id}": {"$exists": True}}).get_user(member.id)
        if inv is None: inv = TreatUser(member.id, 0)
        # Show
        col = random.choice([discord.Color.magenta(), discord.Color.purple(), discord.Color.red()])
        reply = discord.Embed(color=col)
        reply.title = f"üç¨ | {anf(member)}"
        reply.description = f"**–ö–æ–Ω—Ñ–µ—Ç:** {inv.treats} üç¨"
        reply.set_thumbnail(url=member.avatar_url)
        reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)


    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.command(
        aliases=["top-sweets", "top-treats", "tt"],
        help="—Ç–æ–ø —Å–∞–º—ã—Ö –º–∞—Ç—ë—Ä—ã—Ö —Å–ª–∞–¥–∫–æ–µ–∂–µ–∫",
        description="—Ç–∞–±–ª–∏—Ü–∞ –∫–æ–Ω—Ñ–µ—Ç–Ω—ã—Ö —Ç–æ–ª—Å—Ç–æ—Å—É–º–æ–≤",
        brief="–°—Ç—Ä–∞–Ω–∏—Ü–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1)",
        usage="\n2" )
    async def top_treats(self, ctx, page: IntConverter=1):
        interv = 15
        ts = TreatStorage(ctx.guild.id)
        total_pages = 1
        if ts.user_count > 0: total_pages = (ts.user_count - 1) * interv + 1
        # Check page
        if not (0 < page <= total_pages):
            page = total_pages
        ts.__users = sorted(ts.users, reverse=True, key=lambda u: u.treats)
        lowerb = (page - 1) * interv
        upperb = min(ts.user_count, page * interv)
        desc = ""
        for i in range(lowerb, upperb):
            u = ts.__users[i]
            member = ctx.guild.get_member(u.id)
            if member is None: member = "[–î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã]"
            desc += f"`{i + 1}.` **{anf(member)}** | {u.treats} üç¨\n"
        reply = discord.Embed(color=discord.Color.magenta())
        reply.title = "üëë | –°–∞–º—ã–µ –∑–∞–ø–∞—Å–ª–∏–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞"
        reply.description = desc
        reply.set_footer(text=f"–°—Ç—Ä. {page}/{total_pages} | {ctx.author}", icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)


    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["reset-treats", "rt"],
        help="–æ–±–Ω—É–ª–∏—Ç—å –∫–æ–Ω—Ñ–µ—Ç—ã –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
        description="–∫–∞–∫ —Ç–æ–ª—å–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ - –¥–æ—Ä–æ–≥–∏ –Ω–∞–∑–∞–¥ –Ω–µ –±—É–¥–µ—Ç, —É –≤—Å–µ—Ö —Å—Ç–∞–Ω–µ—Ç –ø–æ 0 –∫–æ–Ω—Ñ–µ—Ç.",
        brief="",
        usage="" )
    async def reset_treats(self, ctx):
        reply = discord.Embed()
        reply.title = "üìù | –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ"
        reply.description = "–°–∫–∞–∂–∏—Ç–µ, –í—ã —É–≤–µ—Ä–µ–Ω—ã?\n–ù–∞–ø–∏—à–∏—Ç–µ `–¥–∞` –∏–ª–∏ `–Ω–µ—Ç`"
        reply.set_footer(text=f"{ctx.author}", icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)

        yes = ["y", "yes", "–¥–∞"]
        no = ["n", "no", "–Ω–µ—Ç"]
        def check(msg):
            if msg.channel.id != ctx.channel.id or msg.author.id != ctx.author.id:
                return False
            if msg.content.lower() in [*yes, *no]:
                return True
            if is_command(msg.content, ctx.prefix, self.client):
                raise EmergencyExit()
            return False
        
        try:
            msg = await self.client.wait_for("message", check=check, timeout=60)
        except asyncio.TimeoutError:
            await ctx.send(f"{ctx.author.mention}, –í—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–ª–∏. –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        else:
            yn = msg.content.lower()
            if yn in yes:
                TreatStorage(ctx.guild.id, request_data=False).reset()
                reply = discord.Embed(color=discord.Color.orange())
                reply.title = "üéÉ | –¢–æ–ø –æ–±–Ω—É–ª—ë–Ω"
                reply.description = "–ù–∏ —É –∫–æ–≥–æ –±–æ–ª—å—à–µ –Ω–µ—Ç –∫–æ—Ñ–µ—Ç–æ–∫! –•–∞—Ö –º–¥–∞"
                reply.set_footer(text=f"{ctx.author}", icon_url=ctx.author.avatar_url)
                await ctx.send(embed=reply)
            else:
                reply = discord.Embed(color=discord.Color.blue())
                reply.title = "‚Ü© | –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
                reply.description = "–ü—Ä–∞–≤–∏–ª—å–Ω–æ, –ø—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è –æ–Ω–∏ —Å–ø—è—Ç —Å–ø–æ–∫–æ–π–Ω–æ."
                reply.set_footer(text=f"{ctx.author}", icon_url=ctx.author.avatar_url)
                await ctx.send(embed=reply)

    #----------------------------------------------+
    #                   Errors                     |
    #----------------------------------------------+


def setup(client):
    client.add_cog(events(client))