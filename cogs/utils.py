import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio
from random import randint, shuffle, choice
from datetime import datetime, timedelta
import os
from io import BytesIO

#----------------------------------------------+
#                 Variables                    |
#----------------------------------------------+
mc_memory = {}

#----------------------------------------------+
#                 Functions                    |
#----------------------------------------------+
from functions import has_permissions, antiformat, get_message, find_alias, Server


def unwrap_isolation(text, s):
    length, wid, i = len(text), len(s), 0
    out = ""
    while i < length:
        if text[i:i + wid] == s:
            i += wid
            while i < length and text[i:i + wid] != s:
                out += text[i]
                i += 1
            out += "\n"
        i += 1
    return out.strip()


def color_from_string(_color):
    Col = discord.Color
    _color = _color.lower()
    if "," in _color:
        rgb = [c.strip() for c in _color.split(",")]
        rgb = [int(c) for c in rgb]
        if len(rgb) < 3 or len(rgb) > 3:
            _color = Col.default()
        else:
            in_range_bools = [(c >= 0 and c < 256) for c in rgb]
            if False in in_range_bools:
                _color = Col.default()
            else:
                _color = Col.from_rgb(*rgb)
    else:
        colors = {
            "green": Col.green(), "dark_green": Col.dark_green(),
            "red": Col.red(), "dark_red": Col.dark_red(),
            "blue": Col.default(), "dark_blue": Col.dark_blue(),
            "magenta": Col.magenta(), "teal": Col.teal(),
            "gold": Col.gold(), "orange": Col.orange(),
            "purple": Col.purple(), "blurple": Col.blurple(),
            "white": Col.from_rgb(255, 255, 255), "black": Col.from_rgb(1, 1, 1)
        }
        if _color not in colors:
            _color = Col.default()
        else:
            _color = colors[_color]
    return _color


def from_hex(string):
    return int(string[1:], 16)


def embed_from_string(text_input):
    # Carving logical parts
    _title = unwrap_isolation(text_input, "==")
    _desc = unwrap_isolation(text_input, "--")
    _color = unwrap_isolation(text_input, "##")
    _image_url = unwrap_isolation(text_input, "&&")
    _thumb_url = unwrap_isolation(text_input, "++")
    # Interpreting some values
    if _title == "" and _desc == "" and _color == "" and _image_url == "" and _thumb_url == "":
        return None
    else:
        _color = color_from_string(_color)

        emb = discord.Embed(
            title=_title,
            description=_desc,
            color=_color
        )
        if _image_url != "":
            emb.set_image(url=_image_url)
        if _thumb_url != "":
            emb.set_thumbnail(url=_thumb_url)
        
        return emb


def is_int(string):
    try:
        int(string)
        return True
    except ValueError:
        return False


def dt_from_string(string):
    try:
        date, time = string.strip().split()
        day, month = date.split(".")[:2]
        hrs, minutes = time.split(":")[:2]
        now = datetime.utcnow()
        return datetime(now.year, int(month), int(day), int(hrs), int(minutes)) - timedelta(hours=3)
    except Exception:
        return None


def is_guild_moderator():
    def predicate(ctx):
        mod_roles = Server(ctx.guild.id, projection={"mod_roles": True}).mod_roles
        author_role_ids = [r.id for r in ctx.author.roles]
        has = False
        for role_id in mod_roles:
            if role_id in author_role_ids:
                has = True
                break
        if has:
            return True
        else:
            raise IsNotModerator()
    return commands.check(predicate)


class IsNotModerator(commands.CheckFailure):
    pass


class utils(commands.Cog):
    def __init__(self, client):
        self.client = client

    #----------------------------------------------+
    #                   Events                     |
    #----------------------------------------------+
    @commands.Cog.listener()
    async def on_ready(self):
        print(f">> Utils cog is loaded")

    #----------------------------------------------+
    #                  Commands                    |
    #----------------------------------------------+
    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.command(
        aliases=["rand"],
        help="—Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ",
        description="–≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ",
        brief="–ì–∞–Ω–∏—Ü–∞",
        usage="-30 100" )
    async def random(self, ctx, *, string):
        nums = string.split()[:2]
        all_ints = True
        for i, num in enumerate(nums):
            if is_int(num):
                nums[i] = int(num)
            else:
                all_ints = False
                break
        if not all_ints:
            p, cmd = ctx.prefix, ctx.command.name
            reply = discord.Embed(
                title="üí• –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç",
                description=f"–ü–æ—Å–ª–µ `{p}{cmd}` –¥–æ–ª–∂–Ω—ã —Å—Ç–æ—è—Ç—å —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞",
                color=discord.Color.dark_red()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)
        else:
            if len(nums) > 1:
                l_num, r_num = nums
            else:
                l_num, r_num = 0, nums[0]
            l_num, r_num = min(l_num, r_num), max(l_num, r_num)
            
            if r_num - l_num > 1E12:
                reply = discord.Embed(
                    title="üí• –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç",
                    description=f"–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å `10 ^ 12`",
                    color=discord.Color.dark_red()
                )
                reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
                await ctx.send(embed=reply)

            else:
                result = randint(l_num, r_num)
                reply = discord.Embed(
                    title=f"üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–∂–¥—É `{l_num}` –∏ `{r_num}`",
                    description=f"**{result}**",
                    color=from_hex("#ffdead")
                )
                reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
                
                await ctx.send(embed=reply)


    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        help="–≤—ã—Å–ª–∞—Ç—å —Ä–∞–º–∫—É",
        description=(
            "—Å–æ–∑–¥–∞—ë—Ç —Ä–∞–º–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º, —Ç–µ–∫—Å—Ç–æ–º, –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏ —Ç.–ø.\n"
            "–ß—Ç–æ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —á–∞—Å—Ç–∏ —Ä–∞–º–∫–∏:\n"
            "> `==–ó–∞–≥–æ–ª–æ–≤–æ–∫==` - –∑–∞–¥–∞—ë—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫\n"
            "> `--–¢–µ–∫—Å—Ç--` - –∑–∞–¥–∞—ë—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫\n"
            "> `##—Ü–≤–µ—Ç##` - –∑–∞–¥–∞—ë—Ç —Ü–≤–µ—Ç (—Å–º. –Ω–∏–∂–µ)\n"
            "> `&&url_–∫–∞—Ä—Ç–∏–Ω–∫–∏&&` - –∑–∞–¥–∞—ë—Ç –±–æ–ª—å—à—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É\n"
            "> `++url_–∫–∞—Ä—Ç–∏–Ω–∫–∏++` - –∑–∞–¥–∞—ë—Ç –º–∞–ª–µ–Ω—å–∫—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É\n"
            "**–û —Ü–≤–µ—Ç–µ:** —Ü–≤–µ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ –∏–∑ —Å–ø–∏—Å–∫–∞, —Ç–∞–∫ –∏ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ RGB\n"
            "–í RGB —Ñ–æ—Ä–º–∞—Ç–µ –º–µ–∂–¥—É `##` –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ 3 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞–ø—Ä–∏–º–µ—Ä `##23, 123, 123##`\n"
            "–°–ø–∏—Å–æ–∫ —Ü–≤–µ—Ç–æ–≤: `red, dark_red, blue, dark_blue, green, dark_green, gold, teal, magenta, purple, blurple, orange, white, black`"
        ),
        brief="–°–∏–Ω—Ç–∞–∫—Å–∏—Å",
        usage=(
            "==–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ==\n"
            "--–ú—ã –¥–æ–±–∞–≤–∏–ª–∏ —Ä–æ–ª—å **–ü–æ–º–æ—â–Ω–∏–∫**!--\n"
            "##gold##"
        ) )
    async def embed(self, ctx, *, text):
        p = ctx.prefix
        emb = embed_from_string(text)
        if emb is None:
            pass
        else:
            await ctx.send(embed=emb)
            await ctx.message.delete()
            try:
                await ctx.author.send(f"{p}embed {antiformat(text)}")
            except Exception:
                pass
    

    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        help="–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–º–∫—É",
        description="—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –º–æ–∏ —Ä–∞–º–∫–∏ (—ç–º–±–µ–¥—ã)",
        brief="ID_—Å–æ–æ–±—â–µ–Ω–∏—è –¢–µ–∫—Å—Ç_–¥–ª—è_—ç–º–±–µ–¥–∞",
        usage="123456789123123123 ==–ó–∞–≥–æ–ª–æ–≤–æ–∫== --–¢–µ–∫—Å—Ç--" )
    async def edit(self, ctx, _id, *, text_input):
        if not _id.isdigit():
            reply = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description=f"ID –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ —Ü–∏—Ñ—Ä.\n–í–≤–µ–¥–µ–Ω–æ: {_id}",
                color=discord.Color.dark_red()
            )
            reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
            await ctx.send(embed=reply)
        
        else:
            message = await get_message(ctx.channel, int(_id))
            if message is None:
                reply = discord.Embed(
                    title="üîé –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
                    description=f"–í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å ID: `{_id}`"
                )
                reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                await ctx.send(embed=reply)
            
            elif message.author.id != self.client.user.id:
                reply = discord.Embed(
                    title="‚ùå –≠—Ç–æ –Ω–µ –º–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ",
                    description="–Ø –Ω–µ –∏–º–µ—é –ø—Ä–∞–≤–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —á—É–∂–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                    color=discord.Color.dark_red()
                )
                reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                await ctx.send(embed=reply)
            
            else:
                emb = embed_from_string(text_input)
                
                await message.edit(embed=emb)
                try:
                    await ctx.author.send(f"{ctx.prefix}edit {_id} {antiformat(text_input)}")
                except Exception:
                    pass
                await ctx.message.delete()
    

    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.check_any(
        commands.has_permissions(administrator=True),
        is_guild_moderator() )
    @commands.command(
        aliases=["count-messages", "cm"],
        help="–ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–∫–æ–π-—Ç–æ –ø–µ—Ä–∏–æ–¥",
        description="—Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏",
        brief="–¥–∞—Ç–∞ –≤—Ä–µ–º—è - –¥–∞—Ç–∞ –≤—Ä–µ–º—è",
        usage="01.01 1:00 - 01.01 4:00" )
    async def count_messages(self, ctx, *, after_before):
        p = ctx.prefix; cmd = str(ctx.invoked_with)

        try:
            after, before = after_before.split("-")
            after = dt_from_string(after)
            before = dt_from_string(before)

        except Exception:
            after = None; before = None

        if None in [after, before]:
            reply = discord.Embed(
                title="‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç",
                description=(
                    "–í–µ—Ä–æ—è—Ç–Ω–æ –í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫, –≤–æ—Ç —à–∞–±–ª–æ–Ω:\n"
                    f"> `{p}{cmd} 01.01 1:00 - 01.01 3:00`"
                ),
                color=discord.Color.dark_red()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)
        
        else:
            if after > before:
                before, after = after, before
            
            await ctx.send("üïë –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")

            count = 0
            auth_ids = {}
            async for m in ctx.channel.history(limit=None, before=before, after=after):
                count += 1
                if m.author.id not in auth_ids:
                    auth_ids[m.author.id] = 1
                else:
                    auth_ids[m.author.id] += 1
            
            plus_3 = timedelta(hours=3)
            usercount = 0
            desc = ""
            for i, pair in enumerate(sorted(list(auth_ids.items()), key=lambda p: p[1], reverse=True)):
                ID, num = pair
                member = ctx.guild.get_member(ID)
                desc += f"{i + 1}. –¢–µ–≥: {member}\tID: {ID}\t–°–æ–æ–±—â–µ–Ω–∏–π: {num}\n"
                usercount += 1
            del auth_ids
            
            btext = BytesIO(desc.encode("utf-8"))
            reply = discord.Embed(color=discord.Color.magenta())
            reply.title="üìÖ –ò—Ç–æ–≥ –ø–æ–¥—Å—á—ë—Ç–∞"
            reply.description=(
                f"**–ü–µ—Ä–∏–æ–¥:** —Å `{after + plus_3}` –ø–æ `{before + plus_3}` (`–ú–°–ö`)\n\n"
                f"**–í—Å–µ–≥–æ –Ω–∞–ø–∏—Å–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥:** `{count}`\n\n"
                f"**–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–∏—Å–∞–≤—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è:** `{usercount}`"
            )
            reply.set_footer(text="–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ")
            await ctx.send(embed=reply, file=discord.File(btext, "user_data.txt"))


    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.command(
        aliases=["choose-from-role", "role-lottery", "cfr"],
        help="–≤—ã–±—Ä–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π —Ä–æ–ª–∏",
        description="–≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã—Ö –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ä–æ–ª–∏",
        brief="–ß–∏—Å–ª–æ-–ª—é–¥–µ–π –†–æ–ª—å",
        usage="10 –£—á–∞—Å—Ç–Ω–∏–∫" )
    async def choose_from_role(self, ctx, num: int, *, role: discord.Role):
        roleowners = [m for m in ctx.guild.members if role in m.roles]
        shuffle(roleowners)
        roleowners = roleowners[:num]
        desc = ""
        for i, winner in enumerate(roleowners):
            desc += f"`{i + 1}.` {antiformat(winner)} | *`{winner.id}`*\n"
        del roleowners
        reply = discord.Embed(
            title=f"üé≤ | –°–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω—ã –æ–±–ª–∞–¥–∞—Ç–µ–ª–∏ —Ä–æ–ª–∏ [{role.name}]",
            description=desc[:2048],
            color=discord.Color.blurple()
        )
        reply.set_thumbnail(url=ctx.guild.icon_url)
        if len(desc) > 2048:
            reply.set_footer(text="–¢–µ–∫—Å—Ç –º–æ–≥ –±—ã—Ç—å –æ–±—Ä–µ–∑–∞–Ω –∏–∑-–∑–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ —Ç–µ–∫—Å—Ç–∞")
        del desc
        await ctx.send(embed=reply)


    @commands.cooldown(1, 300, commands.BucketType.member)
    @commands.command(
        aliases=["—à–∞—Ä"],
        help="—É–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–¥—É",
        description="–æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ª—é–±–æ–π –í–∞—à –≤–æ–ø—Ä–æ—Å –∏ –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –Ω–µ–≤–ø–æ–ø–∞–¥.",
        brief="–≤–æ–ø—Ä–æ—Å",
        usage="–ú–Ω–µ —Å—É–∂–¥–µ–Ω–æ –∏–≥—Ä–∞—Ç—å –≤ –±—Ä–∞–≤–ª —Å—Ç–∞—Ä—Å?" )
    async def ball(self, ctx, *, query):
        qwords = {
            "–ø–æ—á–µ–º—É": [
                "–ü–æ—Ç–æ–º—É —á—Ç–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –∑–µ–º–ª—è –¥–µ–ª–∞–µ—Ç –æ–¥–∏–Ω –æ–±–æ—Ä–æ—Ç –≤–æ–∫—Ä—É–≥ —Å–≤–æ–µ–π –æ—Å–∏, –ø—Ä–æ—Ö–æ–¥–∏—Ç 24 —á–∞—Å–∞.",
                "–ü–æ—Ç–æ–º—É —á—Ç–æ –µ—Å–ª–∏ –±—ã —ç—Ç–æ –±—ã–ª–æ –Ω–µ —Ç–∞–∫, –±—ã–ª–æ –±—ã –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ.",
                "–•–æ—Ç—è –±—ã –¥—É–º–∞–π, –ø—Ä–µ–∂–¥–µ —á–µ–º –∑–∞–¥–∞—ë—à—å —Ç–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã.",
                "–ü–æ—Ç–æ–º—É —á—Ç–æ —É –∫—É—Ä–æ–ø–∞—Ç–æ–∫ –Ω–µ—Ç —á—ë—Ç–∫–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞.",
                "–ê –ø–æ—á–µ–º—É –Ω–µ—Ç?",
                "–ü–æ—Ç–æ–º—É —á—Ç–æ –∫—É–∫—É—Ä—É–∑–∞ - —ç—Ç–æ –≤–∫—É—Å–Ω–∞—è –µ–¥–∞. –ü–æ—Ç–æ–º—É —á—Ç–æ –∫—É–∫—É—Ä—É–∑–∞ - —ç—Ç–æ –º—è—Å–æ, –∫–æ–ª–±–∞—Å–∞.",
                "–ú–µ–Ω—å—à–µ –∑–Ω–∞–µ—à—å - –∫—Ä–µ–ø—á–µ —Å–ø–∏—à—å.",
                "–ü–æ—Ç–æ–º—É —á—Ç–æ –∫—É–∫—É—Ä—É–∑–∞ - —ç—Ç–æ –≤–∫—É—Å–Ω–∞—è –µ–¥–∞. –ü–æ—Ç–æ–º—É —á—Ç–æ –∫—É–∫—É—Ä—É–∑–∞ - —ç—Ç–æ –º—è—Å–æ, –∫–æ–ª–±–∞—Å–∞!",
                f"–ü—Ä–∏—á–∏–Ω–∞ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞ - {choice(['–≠–∫–≤–µ–Ω–æ—Å', '—è', '–ò–Ω–¥–∏'])} –≥–µ–π.",
                "–ü—Ä–∏—á–∏–Ω–∞ –≤ —Ç–æ–º, —á—Ç–æ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ –¥–∏–∫–æ –≤–æ–Ω—è–µ—Ç."
            ],
            "–∫–∞–∫": [
                "–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤—ã–ø—Ä—è–º–∏—Ç—å —Å–ø–∏–Ω—É. –ó–∞—Ç–µ–º –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –Ω–∞–∫–ª–æ–Ω–∏—Ç—å—Å—è, –≤—ã–¥–æ—Ö–Ω—É—Ç—å –∏ –∑–∞–¥—É–º–∞—Ç—å—Å—è –æ —Å–º—ã—Å–ª–µ —Å–≤–æ–µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è.",
                "–¢—ã –Ω–∞–≤–µ—Ä–Ω–æ–µ —Ö–æ—á–µ—à—å —É—Å–ª—ã—à–∞—Ç—å –æ—Ç –º–µ–Ω—è –ø–æ—à–∞–≥–æ–≤—ã–π –≥–∞–π–¥. –ß—Ç–æ –∂, —Å–µ–≥–æ–¥–Ω—è –º–Ω–µ –ª–µ–Ω—å —Ä–∞—Å—Ç–æ–ø—ã—Ä–∏–≤–∞—Ç—å—Å—è –∏ –æ–±—ä—è—Å–Ω—è—Ç—å —ç—Ç–æ, –≤–ø—Ä–æ—á–µ–º, –∫–∞–∫ –∏ –≤ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –¥–µ–Ω—å.",
                "–Ø –±—ã –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞–ª —Ç–µ–≥–Ω—É—Ç—å –æ–ø—Ç–∏–º–∏—Å—Ç–∞ –∏ –∑–∞–¥–∞—Ç—å –µ–º—É —Ç–æ—Ç –∂–µ –≤–æ–ø—Ä–æ—Å.",
                "–í—Å—ë –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ - –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –í–ª–∞–¥–∞ –ê4.",
                "–ü—É–Ω–∫—Ç –ø–µ—Ä–≤—ã–π - —É–¥–∞–ª–∏—Ç—å –±—Ä–∞–≤–ª —Å—Ç–∞—Ä—Å. –ü—É–Ω–∫—Ç –≤—Ç–æ—Ä–æ–π - –Ω–µ –¥–æ–ø—É—Å—Ç–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞.",
                "–ê–∫–∫—É—Ä–∞—Ç–Ω–æ –ø—Ä–æ—Ç–∏—Ä–∞–µ—à—å —Å–≤–æ–π —ç–∫—Ä–∞–Ω, —Ö–µ—Ö —Ö–µ—Ö –º–º–º–º–º... –ò–Ω–æ–≥–¥–∞, –±—ã–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ –ø–ª–æ—Ö–æ –≤–∏–¥–Ω–æ.",
                "–ù–∏–∫–∞–∫.",
                "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ.",
                "–¢–µ–≥–Ω–∏ —É–∂–µ –æ–ø—Ç–∏–º–∏—Å—Ç–∞, –Ω–µ —Ç—è–Ω–∏ –∫–æ—Ç–∞ –∑–∞ —Ö–≤–æ—Å—Ç."
            ],
            "–∑–∞—á–µ–º": [
                "–ß—Ç–æ–±—ã –∫—Ç–æ-–Ω–∏–±—É–¥—å –≤—Ä–æ–¥–µ —Ç–µ–±—è –ª–∏—à–Ω–∏–π —Ä–∞–∑ –ø—Ä–æ–ø–∏—Å–∞–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –∏ —É–ª—É—á—à–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞.",
                "–õ–∏—à–Ω–∏–º —ç—Ç–æ —Ç–æ—á–Ω–æ –Ω–µ –±—É–¥–µ—Ç.",
                "–£—á—ë–Ω—ã–µ –ø–æ–∫–∞ —ç—Ç–æ–≥–æ –Ω–µ –≤—ã—è—Å–Ω–∏–ª–∏.",
                "–Ø –¥–æ–ª–≥–æ —Ä–∞–∑–º—ã—à–ª—è–ª –Ω–∞–¥ —Ç–≤–æ–∏–º –≤–æ–ø—Ä–æ—Å–æ–º - –ø—Ä–∏–º–µ—Ä–Ω–æ 100 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ - –∏ –ø—Ä–∏—à—ë–ª –∫ –≤—ã–≤–æ–¥—É, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è.",
                "–ó–∞—Ç–µ–º, —á—Ç–æ —ç—Ç–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –º–∞–≥–Ω–∏—Ç–æ—Å—Ñ–µ—Ä—É –ó–µ–º–ª–∏ (–µ—Å–ª–∏ –∫—Ç–æ –Ω–µ –∑–Ω–∞–ª).",
                "–°–∫–æ–ª—å–∫–æ –±—ã —Ç—ã –Ω–∏ —Å–ø—Ä–∞—à–∏–≤–∞–ª, –ò–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –∏ –°–µ–Ω—è –±—É–¥—É—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∫–∞–∂–¥–æ–µ —Ç–≤–æ—ë –¥–≤–∏–∂–µ–Ω–∏–µ.",
                "–ß—Ç–æ–±—ã –ë–∞–π–¥–µ–Ω —Å—Ç–∞–ª –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –°–®–ê.",
                "–ó–∞—Ç–µ–º, —á—Ç–æ —ç—Ç–æ —Ö–æ—Ä–æ—à–æ —Å–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ —Å—Ä–µ–¥–Ω–µ –∞–∑–∏–∞—Ç—Å–∫–∏—Ö —Å–ª–æ–Ω–æ–≤."
            ],
            "–≥–¥–µ": [
                "–ü–æ–¥ —Å—Ç–æ–ª–æ–º. –ò —ç—Ç–æ –Ω–µ –æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è.",
                "–ù–µ —Ç–∞–∫ –±–ª–∏–∑–∫–æ, –∫–∞–∫ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã.",
                "–í –¥–µ–ø—Ä–µ—Å—Å–∏–∏. –ü—Ä–æ—Å—Ç–æ –æ—Ç—Å—Ç–∞–Ω—å—Ç–µ...",
                "–ï—Å—Ç—å –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–Ω–µ –∑–Ω–∞—Ç—å –Ω–µ –ø–æ–ª–æ–∂–µ–Ω–æ.",
                "–Ø –±—ã —Ö–æ—Ç–µ–ª –æ—Ç–≤–µ—Ç–∏—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ —Ä–∏—Ñ–º—É, –Ω–æ –µ—Å—Ç—å —à–∞–Ω—Å, —á—Ç–æ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ.",
                "–í –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
                "–ê —Ç—ã –∫–∞–∫ –¥—É–º–∞–µ—à—å? –ö–æ–Ω–µ—á–Ω–æ –≤ –†–æ—Å—Å–∏–∏.",
                "–í –∂—É—Ä–Ω–∞–ª–µ –ï—Ä–∞–ª–∞—à.",
                "–í –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞—Ö –†–æ—Å—Å–∏–∏.",
                "–ù–∞ –æ—Å—Ç—Ä–æ–≤–µ, –≥–¥–µ —Ç–∞–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ –∑–∞–¥–∞—é—Ç, –∞ –≥–∏—Ñ—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Ç—ã –∏—Ö –≤—ã–∏–≥—Ä—ã–≤–∞–µ—à—å.",
                "–° —Ç–≤–æ–µ–π –º–∞–º–∞—à–µ–π. –ü—Ä–æ—Å—Ç–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.",
                "–ù–∞ –ë–∞–π–∫–∞–ª–µ. –ö—Å—Ç–∞—Ç–∏, –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –ª—é–¥—è–º —è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –í–ª–∞–¥–∞ –ê4. –ú–Ω–µ —Å—Ç—ã–¥–Ω–æ."
            ],
            "—Å–∫–æ–ª—å–∫–æ": [
                f"–¢–µ–±–µ –∏ –ø—Ä–∞–≤–¥–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ? {randint(1, 10000)}",
                f"–î–∞–∂–µ –ø–æ –º–æ–∏–º –º–µ—Ä–∫–∞–º —ç—Ç–æ —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ - {randint(1, 10000)}",
                f"–ë–æ—é—Å—å –¥–∞–∂–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å, –æ—Ç–∫—É–¥–∞ —è –≤–∑—è–ª —ç—Ç–æ —á–∏—Å–ª–æ - {randint(1, 10000)}",
                f"–ï—Å–ª–∏ —ç—Ç–∏ —Ü–∏—Ñ–µ—Ä–∫–∏ –¥–æ—Å—Ç–∞–≤—è—Ç —Ö–æ—Ç—è –±—ã –º–∞–ª–µ–π—à–µ–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ, —Ç–æ {randint(1, 10000)}",
                f"–ó–∞–≥–∞–¥–∫–∞ –ñ–∞–∫–∞ –§—Ä–µ—Å–∫–æ",
                f"–î–∞–π-–∫–∞ –∫–∏–Ω—É –∫—É–±–∏–∫. {randint(1, 6)}.",
                f"–ù—É —Å–º–æ—Ç—Ä–∏. –°–µ–≥–æ–¥–Ω—è –≤ –º–æ–µ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π –≤—ã–ø–∞–ª–æ {randint(5, 150)} –º–∏–ª–ª–∏–º–µ—Ç—Ä–æ–≤ –æ—Å–∞–¥–∫–æ–≤, –∞ —Ç—Ä–∞—Ñ–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ {randint(1, 10)}/10. –û—Ç—Å—é–¥–∞ –¥–µ–ª–∞–µ–º –≤—ã–≤–æ–¥, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å - {randint(1,500)}.",
                f"–û–æ–æ, —Ç–æ–∂–µ –ª—é–±–∏—à—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è? –ö—Ä—É—Ç–æ, —è –∏—Ö –Ω–µ–Ω–∞–≤–∏–∂—É. –ê, —á—É—Ç—å –Ω–µ –∑–∞–±—ã–ª –æ—Ç–≤–µ—Ç–∏—Ç—å - {randint(1, 1000)}.",
                f"{randint(1, 20000)}. –°–Ω–∞—á–∞–ª–∞ –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è, —á—Ç–æ –Ω–µ–æ–ø—Ä–∞–≤–¥–∞–Ω–Ω–æ –º–Ω–æ–≥–æ. –ù–æ —ç—Ç–æ –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ."
            ],
            "–∫–æ–≥–¥–∞": [
                "–ù–µ —Å–ª–∏—à–∫–æ–º —Å–∫–æ—Ä–æ.",
                f"–ü–æ–º–Ω–∏—Ç—Å—è —è –∫–∞–∫-—Ç–æ —Ä–∞–∑ –ø–æ–¥—Ç—ë—Ä—Å—è –≥–∞–∑–µ—Ç–æ–π —Å —ç—Ç–æ–π –¥–∞—Ç–æ–π - {datetime(randint(1, 3000), randint(1, 12), randint(1, 28))}",
                "–ù–∏–∫–æ–≥–¥–∞. –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç? –ü—Ä–∏–≤—ã–∫–∞–π—Ç–µ.",
                "–ê –∫–∞–∫–∞—è —Ä–∞–∑–Ω–∏—Ü–∞? –í—Å–µ –º—ã —Ä–∞–Ω–æ –∏–ª–∏ –ø–æ–∑–¥–Ω–æ —É–π–¥—ë–º –≤ –Ω–µ–±—ã—Ç–∏–µ, –≤—Å–µ —ç—Ç–∏ –º–µ–ª–∫–∏–µ –Ω–∏—á–µ–≥–æ –Ω–µ —Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è —Ç–æ–ª—å–∫–æ –æ—Ç–≤–ª–µ–∫–∞—é—Ç.",
                "–≥–¥–µ",
                "–ó–∞–≤—Ç—Ä–∞.",
                f"–ß–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–¥–µ–ª—å - {randint(2, 10)}",
                f"–í {randint(2050, 3050)} –≥–æ–¥—É. –ú–æ–∂–µ—Ç –±—ã—Ç—å –¥–∞–∂–µ –≤ —ç—Ç–æ –∂–µ –≤—Ä–µ–º—è.",
                "–í—á–µ—Ä–∞. –õ–∞–¥–Ω–æ, —à—É—á—É. –ü–æ–∑–∞–≤—á–µ—Ä–∞.",
                "–ö–æ–≥–¥–∞, —Å–∫–∞–∂–µ–º, —Ä–∞–∫ –Ω–∞ –≥–æ—Ä–µ —Å–≤–∏—Å–Ω–µ—Ç.",
                f"–ß–µ—Ä–µ–∑ {randint(5, 13)} –Ω–µ–¥–µ–ª—å, {randint(2, 4)} –¥–Ω—è, {randint(5, 20)} —á–∞—Å–æ–≤, {choice([randint(5, 20), randint(25, 30)])} –º–∏–Ω—É—Ç –∏ 1 —Å–µ–∫—É–Ω–¥—É."
            ],
            "–∫–æ–º—É": [
                "–ù—É, –Ω–∞–ø—Ä–∏–º–µ—Ä, –º–Ω–µ.",
                "–û—á–µ–≤–∏–¥–Ω–æ, –ª—é–±–æ–º—É —á–µ–ª–æ–≤–µ–∫—É, —á—å—ë –∏–º—è –°–µ—Ä–≥–µ–π.",
                "–ù–µ –∑–Ω–∞—é. –ù–æ –∫—Ç–æ –±—ã –æ–Ω –Ω–∏ –±—ã–ª, —è –±—ã –Ω–µ –±—ã–ª –ø—Ä–æ—Ç–∏–≤ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∏–º –ø–æ–±–ª–∏–∂–µ.",
                "–ò–Ω–≤–∞–ª–∏–¥–∞–º, –ø–∞—Å—Å–∞–∂–∏—Ä–∞–º —Å –¥–µ—Ç—å–º–∏ –∏ –±–µ—Ä–µ–º–µ–Ω–Ω—ã–º –∂–µ–Ω—â–∏–Ω–∞–º.",
                "–î–µ—Ç—è–º, –∫–æ–Ω–µ—á–Ω–æ –∂–µ.",
                f"–†–∞–±–æ—Ç–Ω–∏–∫–∞–º {choice(['–ú–∞–∫–¥–æ–Ω–∞–ª–¥—Å', '–¢–∏–Ω—å–∫–æ—Ñ—Ñ', '–ì–µ–π–º.—Ç–≤', '–ë—É—Ä–≥–µ—Ä –ö–∏–Ω–≥', 'KFC', '–ë–ª—É—Å—Ç–∫—Å–∞'])}.",
                f"–ù–∞–¥—ë–∂–Ω—ã–º –ª—é–¥—è–º. –ù–∞–ø—Ä–∏–º–µ—Ä {choice(['–ö–≤–∏—Ç—É', '–≠–∫–≤–µ–Ω–æ—Å—É', '–û–ø—Ç–∏–º–∏—Å—Ç—É', '–ò–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä—É', '–°–µ–Ω–µ', '–¢—Ä–æ–ª–ª—é', '–ù–¥—É'])}.",
                "–ü—É—Ç–∏–Ω—É?",
                "–ö–∏—Ç–∞–π—Å–∫–∏–º –æ–ª–∏–º–ø–∏–π—Å–∫–∏–º —á–µ–º–ø–∏–æ–Ω–∞–º.",
                "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω—Å–∫–∏–º —Å–µ–∫—Ç–∞–Ω—Ç–∞–º.",
                "–ö–∞–∫ –±—ã —Å—Ç—Ä–∞–Ω–Ω–æ —ç—Ç–æ –Ω–∏ –∑–≤—É—á–∞–ª–æ, —Å—Ä–µ–¥–Ω–µ –∞–∑–∏–∞—Ç—Å–∫–∏–º –±—É—Ä—É–Ω–¥—É–∫–∞–º."
            ],
            "–∫—Ç–æ": [
                f"–≠—Ç–æ –∂ –∫–∞–∫ –Ω–∞–¥–æ –æ—Ç—Å—Ç–∞—Ç—å –æ—Ç –∂–∏–∑–Ω–∏? {choice(['–ö–≤–∏—Ç', '–≠–∫–≤–µ–Ω–æ—Å', '–û–ø—Ç–∏–º–∏—Å—Ç', '–¢—Ä–æ–ª–ª—å', '–ò–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä', '–°–µ–Ω—è', '–ì–µ–Ω–µ—Ä–∞–ª –ü–∞–Ω–∫', '–í–µ—Ä–Ω–æ–Ω'])} –∫–æ–Ω–µ—á–Ω–æ –∂–µ!",
                "–õ—É—á—à–µ –±—ã —Ç—ã –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–ª. –≠—Ç–æ —Ç–≤–æ–π –¥–µ–¥.",
                "–ù–µ –∫—Ç–æ, –∞ —á—Ç–æ. –í–µ–ª–æ—Å–∏–ø–µ–¥.",
                "–ö–∞—Ä—ã—á –∏–ª–∏ –õ–æ—Å—è—à, —Ç–æ—á–Ω–æ –Ω–µ –ø–æ–º–Ω—é. –û–Ω–∏ –æ–±–∞ –≤—ã–≥–ª—è–¥—è—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ.",
                choice(['–ö—Ä–∞—Å–Ω—ã–π', '–°–∏–Ω–∏–π', '–ñ–µ–ª—Ç—ã–π', '–ó–µ–ª–µ–Ω—ã–π', '–û—Ä–∞–Ω–∂–µ–≤—ã–π', '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π', '–ë–µ–ª—ã–π', '–ß–µ—Ä–Ω—ã–π', '–§–∏–æ–ª–µ—Ç–æ–≤—ã–π', '–†–æ–∑–æ–≤—ã–π', '–ì–æ–ª—É–±–æ–π']),
                "–°–æ—Å–µ–¥—Å–∫–∏–π —Ä—ã–∂–∏–π –∫–æ—Ç. –û–Ω —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.",
                "–ë–∞–π–¥–µ–Ω, –æ–Ω –≤—Ä–æ–¥–µ –≤ –≤—ã–±–æ—Ä–∞—Ö –ø–æ–±–µ–¥–∏–ª",
                "–ò–Ω–æ–ø–ª–∞–Ω–µ—Ç–Ω–∞—è —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏—è –∏–∑ —Å–æ–∑–≤–µ–∑–¥–∏—è –õ–∏—Ä—ã.",
                "–†–∞–±–æ–≤–ª–∞–¥–µ–ª–µ—Ü –≤ –¥—Ä–µ–≤–Ω–µ–º –ï–≥–∏–ø—Ç–µ.",
                "–ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä –ì–∏—Ç–ª–µ—Ä–∞.",
                "–Ø –Ω–∞–¥–µ—é—Å—å –≤–∞–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–µ—Å–µ–ª–æ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∂–∏—Ç—å —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç. –≠—Ç–æ —Ç—Ä–µ–Ω–µ—Ä —Å–±–æ—Ä–Ω–æ–π –†–æ—Å—Å–∏–∏ –ø–æ —Ñ—É—Ç–±–æ–ª—É.",
                "–õ—é–±–∏–º—ã–π —Ö–æ–º—è—á–æ–∫ –î—É—ç–π–Ω–∞ –î–∂–æ–Ω—Å–æ–Ω–∞."
            ]
        }
        yesno = [
            "–û—á–µ–Ω—å –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ.",
            "–û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ.",
            "–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ —è –≤–µ—Å—å–º–∞ —Å–∏–ª—å–Ω–æ —É–¥–∞—Ä–∏–ª—Å—è –≥–æ–ª–æ–≤–æ–π, –º–æ–≥—É —Ç–æ—á–Ω–æ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –Ω–µ—Ç.",
            "–ù—É –∫–æ–Ω–µ—á–Ω–æ!",
            "–Ø —Ä–∞–¥, —á—Ç–æ —Ç—ã —Å–ø—Ä–æ—Å–∏–ª. –ù–µ—Ç.",
            "–ï—â—ë –º–æ–π –¥–µ–¥ –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ –¥–∞.",
            "–î–∞–π-–∫–∞ –ø–æ–¥—É–º–∞—Ç—å. –•–∞—Ö... –Ω–µ—Ç.",
            "–ù—É –≤–æ–æ–±—â–µ-—Ç–æ –¥–∞.",
            "–≠–º–º–º–º... –ù–µ—Ç.",
            "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ –∫—Ä–∞–π–Ω–µ –º–∞–ª–∞.",
            "–î–∞! –î–∞! –î–ê!!!",
            "–û –ì–æ—Å–ø–æ–¥–∏. –ù–µ—Ç.",
            "–ü–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏ yes. –£–∞–≥–∞–¥–∞–π –∫–∞–∫ –ø–æ-—Ä—É—Å—Å–∫–∏. –õ–∞–¥–Ω–æ, —Å–∫–∞–∂—É - –¥–∞.",
            "–ù—É, –∫–∞–∫ —Ç–µ–±–µ —Å–∫–∞–∑–∞—Ç—å... –ü–æ–∂–∞–ª—É–π –Ω–µ—Ç.",
            "–ê—Ö–∞—Ö, —Ç–æ–ø –≤–æ–ø—Ä–æ—Å - –Ω—É –∫–æ–Ω–µ—á–Ω–æ!",
            "–í—Ä–æ–¥–µ –Ω–µ—Ç... –¢—É—Ç –∂–µ –Ω–µ—Ç –ø–æ–¥–≤–æ—Ö–∞?"
        ]

        ans = None
        query = query.lower()
        words = query.split()
        if "–∏–ª–∏" in words:
            i = words.index("–∏–ª–∏")
            if 0 < i < len(words) - 1:
                ans = choice([words[i - 1], words[i + 1]])
                if ans[-1:] in "?!.,;:":
                    ans = ans[:-1]
                ans = ans[0].upper() + f"{ans[1:]}. " + choice(["–í—ã–±—Ä–∞—Ç—å –±—ã–ª–æ –Ω–µ–ø—Ä–æ—Å—Ç–æ.", "–û—á–µ–≤–∏–¥–Ω–æ –∂–µ", "–°—Ç—ã–¥–Ω–æ –Ω–µ –∑–Ω–∞—Ç—å.", "–ö–∞–∫ –∑–∞–≤–µ—â–∞–ª –ñ–∞–∫ –§—Ä–µ—Å–∫–æ.", "–°—Ç–µ—Å–Ω—è—é—Å—å —Å–ø—Ä–æ—Å–∏—Ç—å, –∑–∞—á–µ–º —Ç–µ–±–µ —ç—Ç–æ –∑–Ω–∞—Ç—å?"])
        if ans is None:
            for qw in qwords:
                if qw in query:
                    ans = choice(qwords[qw])
                    break
            if ans is None:
                ans = choice(yesno)
        await ctx.send(ans)

    #----------------------------------------------+
    #                   Errors                     |
    #----------------------------------------------+


def setup(client):
    client.add_cog(utils(client))